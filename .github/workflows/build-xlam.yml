name: Build XLAM Add-in

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-xlam:
    runs-on: ubuntu-latest

    steps:
      # üßæ Checkout source
      - name: Checkout repository
        uses: actions/checkout@v4

      # ‚öôÔ∏è Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # üì¶ Install vba-blocks from GitHub
      - name: Install vba-blocks CLI
        run: |
          npm install --global github:vba-blocks/vba-blocks
          BIN_DIR=$(npm bin -g)
          echo "$BIN_DIR" >> $GITHUB_PATH
          echo "Global npm binaries are in: $BIN_DIR"

      # üîç Verify installation
      - name: Verify installation
        run: |
          BIN_DIR=$(npm bin -g)
          echo "Listing contents of $BIN_DIR:"
          ls -al "$BIN_DIR"
          if [ -f "$BIN_DIR/vba" ]; then
            echo "‚úÖ Found vba executable"
            "$BIN_DIR/vba" --version
          else
            echo "‚ö†Ô∏è No vba binary in PATH; using node to run CLI directly"
            node "$(npm root -g)/vba-blocks/bin/vba" --version
          fi

      # üèóÔ∏è Build the XLAM Add-in
      - name: Build XLAM file
        run: |
          BIN_DIR=$(npm bin -g)
          if [ -f "$BIN_DIR/vba" ]; then
            "$BIN_DIR/vba" build
          else
            node "$(npm root -g)/vba-blocks/bin/vba" build
          fi

      # üì§ Upload build artifact
      - name: Upload XLAM artifact
        uses: actions/upload-artifact@v4
        with:
          name: vim_enhanced_xlam
          path: build/vim_enhanced.xlam
